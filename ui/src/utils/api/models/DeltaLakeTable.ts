/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface DeltaLakeTable
 */
export interface DeltaLakeTable {
    /**
     *
     * @type {Array<string>}
     * @memberof DeltaLakeTable
     */
    checkpointLocationHistory?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof DeltaLakeTable
     */
    lastCheckpoint?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof DeltaLakeTable
     */
    metadataLocationHistory?: Array<string>;
}

export function DeltaLakeTableFromJSON(json: any): DeltaLakeTable {
    return DeltaLakeTableFromJSONTyped(json, false);
}

export function DeltaLakeTableFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeltaLakeTable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'checkpointLocationHistory': !exists(json, 'checkpointLocationHistory') ? undefined : json['checkpointLocationHistory'],
        'lastCheckpoint': !exists(json, 'lastCheckpoint') ? undefined : json['lastCheckpoint'],
        'metadataLocationHistory': !exists(json, 'metadataLocationHistory') ? undefined : json['metadataLocationHistory'],
    };
}

export function DeltaLakeTableToJSON(value?: DeltaLakeTable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'checkpointLocationHistory': value.checkpointLocationHistory,
        'lastCheckpoint': value.lastCheckpoint,
        'metadataLocationHistory': value.metadataLocationHistory,
    };
}
