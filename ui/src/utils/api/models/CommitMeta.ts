/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommitMeta
 */
export interface CommitMeta {
    /**
     * 
     * @type {number}
     * @memberof CommitMeta
     */
    commitTime?: number;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    commiter?: string;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof CommitMeta
     */
    message?: string;
}

export function CommitMetaFromJSON(json: any): CommitMeta {
    return CommitMetaFromJSONTyped(json, false);
}

export function CommitMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commitTime': !exists(json, 'commitTime') ? undefined : json['commitTime'],
        'commiter': !exists(json, 'commiter') ? undefined : json['commiter'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function CommitMetaToJSON(value?: CommitMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'commitTime': value.commitTime,
        'commiter': value.commiter,
        'email': value.email,
        'hash': value.hash,
        'message': value.message,
    };
}


