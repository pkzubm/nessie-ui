/* tslint:disable */
/* eslint-disable */
/**
 * Nessie API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstantFromJSON,
    InstantFromJSONTyped,
    InstantToJSON,
} from './';

/**
 *
 * @export
 * @interface CommitMeta
 */
export interface CommitMeta {
    /**
     *
     * @type {string}
     * @memberof CommitMeta
     */
    author?: string;
    /**
     *
     * @type {Instant}
     * @memberof CommitMeta
     */
    authorTime?: Date;
    /**
     *
     * @type {Instant}
     * @memberof CommitMeta
     */
    commitTime?: Date;
    /**
     *
     * @type {string}
     * @memberof CommitMeta
     */
    committer?: string;
    /**
     *
     * @type {string}
     * @memberof CommitMeta
     */
    hash?: string;
    /**
     *
     * @type {string}
     * @memberof CommitMeta
     */
    message?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof CommitMeta
     */
    properties?: { [key: string]: string; };
    /**
     *
     * @type {string}
     * @memberof CommitMeta
     */
    signedOffBy?: string;
}

export function CommitMetaFromJSON(json: any): CommitMeta {
    return CommitMetaFromJSONTyped(json, false);
}

export function CommitMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'author': !exists(json, 'author') ? undefined : json['author'],
        'authorTime': !exists(json, 'authorTime') ? undefined : InstantFromJSON(json['authorTime']),
        'commitTime': !exists(json, 'commitTime') ? undefined : InstantFromJSON(json['commitTime']),
        'committer': !exists(json, 'committer') ? undefined : json['committer'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'properties': !exists(json, 'properties') ? undefined : json['properties'],
        'signedOffBy': !exists(json, 'signedOffBy') ? undefined : json['signedOffBy'],
    };
}

export function CommitMetaToJSON(value?: CommitMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'author': value.author,
        'authorTime': InstantToJSON(value.authorTime),
        'commitTime': InstantToJSON(value.commitTime),
        'committer': value.committer,
        'hash': value.hash,
        'message': value.message,
        'properties': value.properties,
        'signedOffBy': value.signedOffBy,
    };
}
